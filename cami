
Atributs:
    Cami optim;
    Lloc desti;

public void camiMesCurt(Cami actual, int o){

    Candidats iCan=inicialitzarCandidats(actual,o);

    while (! iCan.esFi()){

        if (actual.potSerMillor(optim,iCan,"temps")){

            actual.anotar(iCan);

            if (! iCan.esFi())
                camiMesCurt(actual,iCan.actual());

            if (actual.esMillor(optim,"temps") & actual.Complet(desti)){ #actual menys temps i actual conte desti
                optim=actual;   

            }

            actual.desanotar(iCan);
        }

        iCan.seguent();
    }
}

CalculadorRutas:
Candidats inicialitzarCandidats(actual,o);

Candidat:
boolean esFi();
void seguent();

Circuit:
boolean potSerMillor(Circuit optim,Candidat iCan,String comparacio);
boolean esMillor(Circuit optim,String comparacio);
void anotar(iCan);
void desanotar(iCan);
boolean Complet(Lloc desti);
